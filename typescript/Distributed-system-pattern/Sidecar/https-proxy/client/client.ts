import {io, Socket} from "socket.io-client";

interface ListenEvents {

}

interface EmitEvents {
    greetings: (greetings:string, ack:(response:string) => void) => void;
}

const SERVER_TYPE = "https"
const SERVER_PORT = isNaN(Number(process.env.SERVER_PORT)) ? 3000 : Number(process.env.SERVER_PORT)
//const SERVER_PORT = process.env.SERVER_PORT ?? 3010
const SERVER_ADDRESS = process.env.SERVER_ADDRESS ?? "127.0.0.1"
// rejectUnauthorized: for unauthorized key, which is generated by openssl for testing
const socket:Socket<ListenEvents, EmitEvents> = io(`${SERVER_TYPE}://${SERVER_ADDRESS}:${SERVER_PORT}`, {secure: true, rejectUnauthorized: false})

console.log(`Connect to ${SERVER_TYPE}://${SERVER_ADDRESS}:${SERVER_PORT}`)
socket.on("connect", () => {
    socket.emit("greetings", "Hello from client", (response:string) => {
        console.log(response)
    })
})